{"ast":null,"code":"import { DateTime } from 'luxon';\nconst API_KEY = \"027ae6bb7537852998940514a02d2767\";\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5\";\nconst getWeatherData = (infoType, searchParams) => {\n  const url = new URL(BASE_URL + '/' + infoType);\n  url.search = new URLSearchParams({\n    ...searchParams,\n    appid: API_KEY\n  });\n  return fetch(url).then(res => res.json()).then(date => data);\n};\nconst formatCurrentWeather = data => {\n  const {\n    main: {\n      feels_like,\n      humidity,\n      pressure,\n      temp,\n      temp_max,\n      temp_min\n    },\n    name,\n    sys: {\n      country,\n      sunrise,\n      sunset\n    }\n  } = data;\n  return {\n    lat,\n    lon,\n    feels_like,\n    humidity,\n    pressure,\n    temp,\n    temp_max,\n    temp_min,\n    name,\n    country,\n    sunrise,\n    sunset\n  };\n};\nconst getFormattedCurrentWeather = async searchParams => {\n  const formattedCurrentWeather = await getWeatherData('weather', searchParams).then(formatCurrentWeather);\n};\nexport default getWE;","map":{"version":3,"names":["DateTime","API_KEY","BASE_URL","getWeatherData","infoType","searchParams","url","URL","search","URLSearchParams","appid","fetch","then","res","json","date","data","formatCurrentWeather","main","feels_like","humidity","pressure","temp","temp_max","temp_min","name","sys","country","sunrise","sunset","lat","lon","getFormattedCurrentWeather","formattedCurrentWeather","getWE"],"sources":["/Users/muhammadabdullah/Documents/Git/weather-dashboard/react-weather-app/src/services/weatherService.js"],"sourcesContent":["import { DateTime } from 'luxon';\n\nconst API_KEY = \"027ae6bb7537852998940514a02d2767\";\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5\";\n\nconst getWeatherData = (infoType, searchParams) => {\n    const url = new URL(BASE_URL + '/' + infoType);\n    url.search = new URLSearchParams({...searchParams, appid:API_KEY});\n\n    return fetch(url)\n    .then((res) => res.json())\n    .then((date) => data);\n};\n\nconst formatCurrentWeather = (data) => {\n    const {\n        main: {feels_like, humidity, pressure, temp, temp_max, temp_min},\n        name,\n        sys: {country, sunrise, sunset},\n    } = data\n\n    return {lat, lon, feels_like, humidity, pressure, temp, temp_max, temp_min, name, country, sunrise, sunset}\n}\n\nconst getFormattedCurrentWeather = async (searchParams) => {\n    const formattedCurrentWeather = await getWeatherData\n    ('weather', searchParams).then(formatCurrentWeather)\n}\n\nexport default getWE;"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,OAAO,GAAG,kCAAkC;AAClD,MAAMC,QAAQ,GAAG,yCAAyC;AAE1D,MAAMC,cAAc,GAAGA,CAACC,QAAQ,EAAEC,YAAY,KAAK;EAC/C,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAACL,QAAQ,GAAG,GAAG,GAAGE,QAAQ,CAAC;EAC9CE,GAAG,CAACE,MAAM,GAAG,IAAIC,eAAe,CAAC;IAAC,GAAGJ,YAAY;IAAEK,KAAK,EAACT;EAAO,CAAC,CAAC;EAElE,OAAOU,KAAK,CAACL,GAAG,CAAC,CAChBM,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKC,IAAI,CAAC;AACzB,CAAC;AAED,MAAMC,oBAAoB,GAAID,IAAI,IAAK;EACnC,MAAM;IACFE,IAAI,EAAE;MAACC,UAAU;MAAEC,QAAQ;MAAEC,QAAQ;MAAEC,IAAI;MAAEC,QAAQ;MAAEC;IAAQ,CAAC;IAChEC,IAAI;IACJC,GAAG,EAAE;MAACC,OAAO;MAAEC,OAAO;MAAEC;IAAM;EAClC,CAAC,GAAGb,IAAI;EAER,OAAO;IAACc,GAAG;IAAEC,GAAG;IAAEZ,UAAU;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,IAAI;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,IAAI;IAAEE,OAAO;IAAEC,OAAO;IAAEC;EAAM,CAAC;AAC/G,CAAC;AAED,MAAMG,0BAA0B,GAAG,MAAO3B,YAAY,IAAK;EACvD,MAAM4B,uBAAuB,GAAG,MAAM9B,cAAc,CACnD,SAAS,EAAEE,YAAY,CAAC,CAACO,IAAI,CAACK,oBAAoB,CAAC;AACxD,CAAC;AAED,eAAeiB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}